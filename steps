lsblk
sudo mkdir /mnt/cd
sudo mount /dev/sr0 /mnt/cd
sudo vim /etc/fstab 
sudo swapoff -a
sudo vim /etc/hosts
192.168.100.100 pohakubemaster

cat <<EOF | sudo tee /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://pkgs.k8s.io/core:/stable:/v1.33/rpm/
enabled=1
gpgcheck=1
gpgkey=https://pkgs.k8s.io/core:/stable:/v1.33/rpm/repodata/repomd.xml.key
EOF

sudo yum install -y kubectl
sudo yum install -y kubelet

cd /mnt/cd/AppStream/Packages
sudo rpm -ivh conntrack-tools-1.4.7-4.el9_5.x86_64.rpm
sudo rpm -ivh libnetfilter_cthelper-1.0.0-22.el9.x86_64.rpm
sudo rpm -ivh libnetfilter_cttimeout-1.0.0-19.el9.x86_64.rpm
sudo rpm -ivh libnetfilter_queue-1.0.5-1.el9.x86_64.rpm
sudo rpm -ivh conntrack-tools-1.4.7-4.el9_5.x86_64.rpm
sudo yum install -y kubelet
sudo yum install -y kubeadm
**********
cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
br_netfilter
EOF

cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-iptables = 1
net.ipv4.ip_forward = 1
net.bridge.bridge-nf-call-ip6tables = 1
EOF

sudo sysctl --system
**********
  
sudo dnf -y install dnf-plugins-core
sudo dnf config-manager --add-repo https://download.docker.com/linux/rhel/docker-ce.repo
sudo dnf install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

sudo systemctl enable --now docker
sudo systemctl enable --now containerd

sudo containerd config default | sudo tee /etc/containerd/config.toml > /dev/null
sudo vim /etc/containerd/config.toml
[plugins."io.containerd.grpc.v1.cri"]
  sandbox_image = "registry.k8s.io/pause:3.10"
sudo sed -i 's/SystemdCgroup = false/SystemdCgroup = true/' /etc/containerd/config.toml

  

#disabled_plugins = ["cri"]
sudo systemctl restart containerd

sudo systemctl stop firewalld
sudo systemctl disable firewalld

sudo systemctl enable kubelet

sudo kubeadm config images pull
sudo kubeadm init

mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config
kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml


kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-ngin>


[apohorai@pohakubemaster ~]$ cat nginx-deployment.yaml 
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  labels:
    app: nginx
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:latest
        ports:
        - containerPort: 80

[apohorai@pohakubemaster ~]$ cat nginx-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
spec:
  selector:
    app: nginx
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: ClusterIP

autossh -M 0 -f -N \
  -i ~/.ssh/id_ed25519 \
  -R 8888:192.168.100.100:30214 \
  attila_pohorai@35.208.94.224
